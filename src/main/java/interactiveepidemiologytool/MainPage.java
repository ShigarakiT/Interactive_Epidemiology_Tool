package interactiveepidemiologytool;

public class MainPage extends javax.swing.JFrame {

    public MainPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        popSlider = new javax.swing.JSlider();
        popCurrent = new javax.swing.JLabel();
        popLabel = new javax.swing.JLabel();
        infectedSlider = new javax.swing.JSlider();
        infectedCurrent = new javax.swing.JLabel();
        infectLabel = new javax.swing.JLabel();
        timeSlider = new javax.swing.JSlider();
        timeCurrent = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        covidButton = new javax.swing.JRadioButton();
        fluButton = new javax.swing.JRadioButton();
        vaccineCurrent = new javax.swing.JLabel();
        vaccineLabel = new javax.swing.JLabel();
        vaccineSlider = new javax.swing.JSlider();
        quarantineCurrent = new javax.swing.JLabel();
        quarantineLabel = new javax.swing.JLabel();
        quarantineSlider = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        instructions = new javax.swing.JTextArea();
        aboutModelButton = new javax.swing.JButton();
        aboutModelButton1 = new javax.swing.JButton();
        bubonicButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Start!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        popSlider.setMaximum(100000);
        popSlider.setMinimum(10000);
        popSlider.setToolTipText("");
        popSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                popSliderStateChanged(evt);
            }
        });

        popCurrent.setLabelFor(popSlider);
        popCurrent.setText("10000");
        popCurrent.setToolTipText("");

        popLabel.setLabelFor(popSlider);
        popLabel.setText("Population");

        infectedSlider.setMinimum(1);
        infectedSlider.setToolTipText("");
        infectedSlider.setValue(1);
        infectedSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                infectedSliderStateChanged(evt);
            }
        });

        infectedCurrent.setLabelFor(infectedSlider);
        infectedCurrent.setText("1");
        infectedCurrent.setToolTipText("");

        infectLabel.setLabelFor(infectedSlider);
        infectLabel.setText("Infected");

        timeSlider.setMaximum(365);
        timeSlider.setMinimum(100);
        timeSlider.setToolTipText("");
        timeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                timeSliderStateChanged(evt);
            }
        });

        timeCurrent.setLabelFor(timeSlider);
        timeCurrent.setText("100");
        timeCurrent.setToolTipText("");

        timeLabel.setLabelFor(timeSlider);
        timeLabel.setText("Timeframe");

        buttonGroup2.add(covidButton);
        covidButton.setSelected(true);
        covidButton.setText("Covid-19");
        covidButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                covidButtonActionPerformed(evt);
            }
        });

        buttonGroup2.add(fluButton);
        fluButton.setText("Influenza");
        fluButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fluButtonActionPerformed(evt);
            }
        });

        vaccineCurrent.setLabelFor(vaccineSlider);
        vaccineCurrent.setText("0");
        vaccineCurrent.setToolTipText("");

        vaccineLabel.setLabelFor(infectedSlider);
        vaccineLabel.setText("Percent of population that is vaccinated");

        vaccineSlider.setToolTipText("");
        vaccineSlider.setValue(0);
        vaccineSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                vaccineSliderStateChanged(evt);
            }
        });

        quarantineCurrent.setLabelFor(quarantineSlider);
        quarantineCurrent.setText("0");
        quarantineCurrent.setToolTipText("");

        quarantineLabel.setLabelFor(quarantineSlider);
        quarantineLabel.setText("Percent of population that quarantine when displaying symptoms");

        quarantineSlider.setToolTipText("");
        quarantineSlider.setValue(0);
        quarantineSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quarantineSliderStateChanged(evt);
            }
        });

        instructions.setEditable(false);
        instructions.setColumns(20);
        instructions.setRows(5);
        instructions.setText("Welcome to our interactive epidemiology tool!\n\nTo get started please select a disease you wish to simulate.\nAfter that please selection the parameters and safeguards you\nwould like to simulate for that disease.\n\nWhen you are happy with your selection please hit Start.\n\nIf you would like to learn more about a component please hit Learn More.");
        jScrollPane1.setViewportView(instructions);

        aboutModelButton.setText("Learn More");
        aboutModelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutModelButtonActionPerformed(evt);
            }
        });

        aboutModelButton1.setText("Learn More");
        aboutModelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutModelButton1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(bubonicButton);
        bubonicButton.setText("Black Death");
        bubonicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bubonicButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(quarantineLabel)
                .addGap(16, 16, 16))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(timeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(timeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(infectLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(infectedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 611, Short.MAX_VALUE)
                                        .addComponent(timeCurrent))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(covidButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(infectedCurrent)))
                                .addGap(105, 105, 105))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(fluButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(popLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(popSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(bubonicButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(popCurrent)
                                .addGap(88, 88, 88))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quarantineSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vaccineSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vaccineLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quarantineCurrent, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(vaccineCurrent, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(98, 98, 98)))))
                .addGap(65, 65, 65))
            .addGroup(layout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(aboutModelButton)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(aboutModelButton1)
                .addGap(122, 122, 122))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(vaccineLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vaccineSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vaccineCurrent)
                        .addGap(28, 28, 28)
                        .addComponent(quarantineLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quarantineSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quarantineCurrent))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(aboutModelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(aboutModelButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infectedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(infectLabel))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(infectedCurrent)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(popSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(popLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(covidButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fluButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(popCurrent)
                    .addComponent(bubonicButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeCurrent)
                .addGap(42, 42, 42)
                .addComponent(jButton1)
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // TODO: Implement observer
    // I believe this is the data that requires implementing an observer for
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PopulationModel epidemic = new PopulationModel();
        epidemic.setPop(popSlider.getValue());
        epidemic.setInfected(infectedSlider.getValue());
        epidemic.setTimeframe(timeSlider.getValue());
        
        if(covidButton.isSelected()){             
            epidemic.setInfectionRate(epidemic.setRateCovid(vaccineSlider.getValue(), quarantineSlider.getValue()));
            epidemic.setIncubation(5.0, 7.0);
            epidemic.setRecovery(7.0, 12.0);
        }
        else if(fluButton.isSelected()){  
            epidemic.setInfectionRate(epidemic.setRateFlu(vaccineSlider.getValue(), quarantineSlider.getValue()));
            epidemic.setIncubation(1.0, 4.0);
            epidemic.setRecovery(4.0, 14.0);
        }
        else if(bubonicButton.isSelected()){   
            epidemic.setInfectionRate(0.4);
            epidemic.setIncubation(2.0, 8.0);
            epidemic.setRecovery(3.0, 6.0);
        }
        
        epidemic.simulate();
        
        // For testing if arrays are valid
        /*System.out.println(epidemic.S);
        System.out.println(epidemic.E);
        System.out.println(epidemic.I);
        System.out.println(epidemic.R);*/
        
        ResultsPage results = new ResultsPage(new MainPage(), true, 
                epidemic, timeSlider.getValue());
        results.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void popSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_popSliderStateChanged
        popCurrent.setText(""+popSlider.getValue());
    }//GEN-LAST:event_popSliderStateChanged

    private void infectedSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_infectedSliderStateChanged
        infectedCurrent.setText(""+infectedSlider.getValue());
    }//GEN-LAST:event_infectedSliderStateChanged

    private void timeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_timeSliderStateChanged
        timeCurrent.setText(""+timeSlider.getValue());
    }//GEN-LAST:event_timeSliderStateChanged

    private void covidButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_covidButtonActionPerformed
        vaccineSlider.setEnabled(true);
        quarantineSlider.setEnabled(true);
    }//GEN-LAST:event_covidButtonActionPerformed

    private void fluButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fluButtonActionPerformed
        vaccineSlider.setEnabled(true);
        quarantineSlider.setEnabled(true);
    }//GEN-LAST:event_fluButtonActionPerformed

    private void vaccineSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_vaccineSliderStateChanged
        vaccineCurrent.setText(""+vaccineSlider.getValue());
    }//GEN-LAST:event_vaccineSliderStateChanged

    private void quarantineSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quarantineSliderStateChanged
        quarantineCurrent.setText(""+quarantineSlider.getValue());
    }//GEN-LAST:event_quarantineSliderStateChanged

    private void aboutModelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutModelButtonActionPerformed
        AboutModelPage infodump = new AboutModelPage(new MainPage(), true);
        infodump.setVisible(true);
    }//GEN-LAST:event_aboutModelButtonActionPerformed

    private void aboutModelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutModelButton1ActionPerformed
        AboutSafeguardsPage infodump = new AboutSafeguardsPage(new MainPage(), true);
        infodump.setVisible(true);
    }//GEN-LAST:event_aboutModelButton1ActionPerformed

    private void bubonicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bubonicButtonActionPerformed
        vaccineSlider.setEnabled(false);
        quarantineSlider.setEnabled(false);
    }//GEN-LAST:event_bubonicButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutModelButton;
    private javax.swing.JButton aboutModelButton1;
    private javax.swing.JRadioButton bubonicButton;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton covidButton;
    private javax.swing.JRadioButton fluButton;
    private javax.swing.JLabel infectLabel;
    private javax.swing.JLabel infectedCurrent;
    private javax.swing.JSlider infectedSlider;
    private javax.swing.JTextArea instructions;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel popCurrent;
    private javax.swing.JLabel popLabel;
    private javax.swing.JSlider popSlider;
    private javax.swing.JLabel quarantineCurrent;
    private javax.swing.JLabel quarantineLabel;
    private javax.swing.JSlider quarantineSlider;
    private javax.swing.JLabel timeCurrent;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JSlider timeSlider;
    private javax.swing.JLabel vaccineCurrent;
    private javax.swing.JLabel vaccineLabel;
    private javax.swing.JSlider vaccineSlider;
    // End of variables declaration//GEN-END:variables
}
