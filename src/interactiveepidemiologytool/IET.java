package interactiveepidemiologytool;

public class IET extends javax.swing.JFrame {
    public SEIR seir;
    public IET() {
        initComponents();
    }

    // Hi
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        popSlider = new javax.swing.JSlider();
        popCurrent = new javax.swing.JLabel();
        popLabel = new javax.swing.JLabel();
        infectedSlider = new javax.swing.JSlider();
        infectedCurrent = new javax.swing.JLabel();
        infectLabel = new javax.swing.JLabel();
        timeSlider = new javax.swing.JSlider();
        timeCurrent = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        covidButton = new javax.swing.JRadioButton();
        blackPlagueButton = new javax.swing.JRadioButton();
        Welcom_Text_Area = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Tool_Bar = new javax.swing.JToolBar();
        File = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Start!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        popSlider.setMaximum(100000);
        popSlider.setMinimum(10000);
        popSlider.setToolTipText("");
        popSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                popSliderStateChanged(evt);
            }
        });

        popCurrent.setLabelFor(popSlider);
        popCurrent.setText("10000");
        popCurrent.setToolTipText("");

        popLabel.setLabelFor(popSlider);
        popLabel.setText("Population");

        infectedSlider.setMinimum(1);
        infectedSlider.setToolTipText("");
        infectedSlider.setValue(1);
        infectedSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                infectedSliderStateChanged(evt);
            }
        });

        infectedCurrent.setLabelFor(infectedSlider);
        infectedCurrent.setText("1");
        infectedCurrent.setToolTipText("");

        infectLabel.setLabelFor(infectedSlider);
        infectLabel.setText("Infected");

        timeSlider.setMaximum(150);
        timeSlider.setMinimum(50);
        timeSlider.setToolTipText("");
        timeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                timeSliderStateChanged(evt);
            }
        });

        timeCurrent.setLabelFor(timeSlider);
        timeCurrent.setText("50");
        timeCurrent.setToolTipText("");

        timeLabel.setLabelFor(timeSlider);
        timeLabel.setText("Timeframe");

        buttonGroup2.add(covidButton);
        covidButton.setSelected(true);
        covidButton.setText("Covid-19");
        covidButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                covidButtonActionPerformed(evt);
            }
        });

        buttonGroup2.add(blackPlagueButton);
        blackPlagueButton.setText("Bubonic Plague");
        blackPlagueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blackPlagueButtonActionPerformed(evt);
            }
        });

        Welcom_Text_Area.setBackground(new java.awt.Color(153, 153, 153));
        Welcom_Text_Area.setBorder(null);
        Welcom_Text_Area.setForeground(new java.awt.Color(153, 153, 153));
        Welcom_Text_Area.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        Welcom_Text_Area.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Liberation Sans", 0, 12)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("Welcome to our interactive epidemiology tool!  \nTo get started select a disease to simulate below and select what \n precautionary measures and parameters you want on the right.\n When you are finished please click the \"Start\" button.");
        jTextArea1.setWrapStyleWord(true);
        Welcom_Text_Area.setViewportView(jTextArea1);

        Tool_Bar.setBackground(new java.awt.Color(255, 255, 255));
        Tool_Bar.setRollover(true);
        Tool_Bar.setPreferredSize(new java.awt.Dimension(100, 22));

        File.setText("File");
        File.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        File.setFocusable(false);
        File.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        File.setMaximumSize(new java.awt.Dimension(40, 40));
        File.setPreferredSize(new java.awt.Dimension(30, 25));
        File.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Tool_Bar.add(File);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(popCurrent)
                .addGap(154, 154, 154))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(covidButton)
                    .addComponent(blackPlagueButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 368, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(timeLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(timeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(timeCurrent)
                            .addGap(105, 105, 105)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(infectLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(infectedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(infectedCurrent)
                            .addGap(105, 105, 105))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(popLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(popSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(61, 61, 61))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jButton1))
                    .addComponent(Welcom_Text_Area, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(Tool_Bar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(Tool_Bar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Welcom_Text_Area, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infectedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(infectLabel)
                    .addComponent(covidButton))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infectedCurrent)
                    .addComponent(blackPlagueButton))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(popSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(popLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(popCurrent)
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeCurrent)
                .addGap(75, 75, 75)
                .addComponent(jButton1)
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        SEIR epidemic = seir;
        epidemic.setPop(popSlider.getValue());
        epidemic.setInfected(infectedSlider.getValue());
        epidemic.setTimeframe(timeSlider.getValue());
        
        if(covidButton.isSelected()){       // From what I have seen most SIR/SEIR models guess good values
            epidemic.setInfectionRate(0.2);
            epidemic.setRecovery(1.0/10.0);
            epidemic.setIncubation(1.0/2.0);
        }
        else if(blackPlagueButton.isSelected()){    // These are all bad guesses, need fixing
            epidemic.setInfectionRate(0.3);
            epidemic.setRecovery(1.0/15.0);
            epidemic.setIncubation(1.0/3.0);
        }
        
        epidemic.createData();
        System.out.println(epidemic.S);
        System.out.println(epidemic.E);
        System.out.println(epidemic.I);
        System.out.println(epidemic.R);
        seir.NavToResults(); // for the results window
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void popSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_popSliderStateChanged
        popCurrent.setText(""+popSlider.getValue());
    }//GEN-LAST:event_popSliderStateChanged

    private void infectedSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_infectedSliderStateChanged
        infectedCurrent.setText(""+infectedSlider.getValue());
    }//GEN-LAST:event_infectedSliderStateChanged

    private void timeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_timeSliderStateChanged
        timeCurrent.setText(""+timeSlider.getValue());
    }//GEN-LAST:event_timeSliderStateChanged

    private void covidButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_covidButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_covidButtonActionPerformed

    private void blackPlagueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blackPlagueButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blackPlagueButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IET.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IET.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IET.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IET.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IET().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton File;
    private javax.swing.JToolBar Tool_Bar;
    private javax.swing.JScrollPane Welcom_Text_Area;
    private javax.swing.JRadioButton blackPlagueButton;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton covidButton;
    private javax.swing.JLabel infectLabel;
    private javax.swing.JLabel infectedCurrent;
    private javax.swing.JSlider infectedSlider;
    private javax.swing.JButton jButton1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel popCurrent;
    private javax.swing.JLabel popLabel;
    private javax.swing.JSlider popSlider;
    private javax.swing.JLabel timeCurrent;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JSlider timeSlider;
    // End of variables declaration//GEN-END:variables
}
